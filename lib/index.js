const getStream = require('get-stream');
const SemanticReleaseError = require('@semantic-release/error');
const conventionalChangelog = require('conventional-changelog-core');
const loadChangelogConfig = require('./load/changelog-config');

/**
 * @callback releaseNotesGeneratorCallback
 * @param {Error} error error object.
 * @param {string} changelog changelog generated by the plugin.
 */

/**
 * Generate the changelog for all the commits since the last release.
 *
 * @param {Object} [pluginConfig={}] semantic-release configuration
 * @param {string} pluginConfig.preset conventional-changelog preset ('angular', 'atom', 'codemirror', 'ember', 'eslint', 'express', 'jquery', 'jscs', 'jshint')
 * @param {string} pluginConfig.config requierable npm package with a custom conventional-changelog preset
 * @param {Object} pluginConfig.parserOpts additional `conventional-changelog-parser` options that will overwrite ones loaded by `preset` or `config`.
 * @param {Object} pluginConfig.writerOpts additional `conventional-changelog-writer` options that will overwrite ones loaded by `preset` or `config`.
 * @param {Object} options semantic-release options
 * @param {releaseNotesGeneratorCallback} callback The callback called with the release note.
 */
module.exports = async (pluginConfig = {}, options, callback) => {
  const cb = typeof options === 'function' ? options : callback;

  try {
    cb(null, await getStream(conventionalChangelog({config: await loadChangelogConfig(pluginConfig)})));
  } catch (err) {
    cb(new SemanticReleaseError(`Error in conventional-changelog: ${err.message}`, err.code));
  }
};
